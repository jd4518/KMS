/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.69
 * Generated at: 2016-06-20 07:39:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("   <table class=\"table\">\r\n");
      out.write("      <thead class=\"htable\">\r\n");
      out.write("      <tr data-ng-repeat=\"b in board\">\r\n");
      out.write("      \t<th colspan=\"6\" style=\"font-size:50px; font-style: italic; \">{{b.CATEGORY_NAME}}</th>\r\n");
      out.write("      </tr>\r\n");
      out.write("         <tr data-ng-repeat=\"b in board\">\r\n");
      out.write("         \t <th>작성자</th>\r\n");
      out.write("            <td>{{b.MEMBER_NAME}}</td>\r\n");
      out.write("            <th>제목</th>\r\n");
      out.write("            <td>{{b.BOARD_TITLE}}</td>\r\n");
      out.write("            <th>등록일</th>\r\n");
      out.write("            <td>{{b.BOARD_REGDATE | date : \"medium\"}}</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </thead>\r\n");
      out.write("      <tbody class=\"btable\">\r\n");
      out.write("         <tr data-ng-repeat=\"b in board\">\r\n");
      out.write("            <td colspan=\"6\">{{b.BOARD_CONTENT}}</td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         <tr>\r\n");
      out.write("         \t<th colspan=\"6\">댓글</th>\r\n");
      out.write("         \t</tr>\r\n");
      out.write("         <tr data-ng-repeat=\"c in comment\">\r\n");
      out.write("         \t<td>\r\n");
      out.write("         \t\t<div>{{c.MEMBER_ID}}</div>\r\n");
      out.write("         \t</td>\r\n");
      out.write("         \t<td colspan=\"5\"> \r\n");
      out.write("\t\t\t    <div class=\"col-lg-10\">\r\n");
      out.write("\t\t\t\t <div  data-ng-repeat=\"b in board\">\r\n");
      out.write("\t\t\t\t  <label class=\"control-label\">{{c.REPLY_CONTENT}}</label>\r\n");
      out.write("\t\t\t\t  <div align=\"right\">\r\n");
      out.write("\t\t\t\t  {{c.REPLY_REGDATE | date : \"yyyy-MM-dd hh:mm:ss a\"}}\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t </div>\r\n");
      out.write("\t\t\t </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      </tbody>\r\n");
      out.write("   </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\" >\r\n");
      out.write("\t<label  class=\"col-lg-2 cLabel\">댓글입력</label>\r\n");
      out.write("\t   <div  class=\"col-lg-7\">\r\n");
      out.write("\t   <textarea name=\"comment\" cols='50' rows='5' data-ng-model=\"content.content\" required>\r\n");
      out.write("\t   </textarea>\r\n");
      out.write("\t   <span style=\"color:red\" data-ng-show=\"commentForm.comment.$dirty && commentForm.comment.$invalid\">\r\n");
      out.write("\t\t<span data-ng-show=\"commentForm.comment.$error.required\">내용을 입력해주세요.</span>\r\n");
      out.write("\t\t</span></div>\r\n");
      out.write("\t   <div class=\"help-block with-errors\"></div>\r\n");
      out.write("\t   <div class=\"col-lg-2\"><input name=\"button\" type=\"button\" data-ng-click=\"click()\" class=\"btn btn-info btnalign\"  value=\"입력\"\r\n");
      out.write("\t   data-ng-disabled=\"commentForm.comment.$invalid\"> </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
